
/* СТАТИЧЕСКИ ПОДГРУЖАЕМЫЕ ДАННЫЕ ИЗ БЭКА
1. const cargoFormats = [ 'Бензовоз', 'Битумовоз', 'Газовоз', 'Изотерм', 'Контейнеровоз', 'Лесовоз', 'Самосвал', 'Тягач', 'Фургон, Борт', 'Цементовоз' ]
2. const propertyRights = [ 'Собственность', 'Аренда', 'Лизинг' ]
3. КЛЮЧИ API
    - яндекс
    - dadata
    - autodispetcher
4. Ссылки на панель справа (в формате
5. ИНФОРМАЦИОННО-АНАЛИТИЧЕСКИЕ:
    - номер телефона
    - стандартные ставки
    - коэффициэнт увеличения километража
*/

/*ПЛАН-ХОЧУ
    1. Заявка - 6 дней (документы???)
        ноябрь: (-,4,5,-,-,8,9,-,-,12,13,-)
    2. Отклики - 4 дня
        ноябрь: (-,16,17,-,-,20,21,-)
    3. Оповещения - 4 дня
        ноябрь: (-,24,25,-,-,28,29,-)
    4. Отображение в Таблице - 4 дня
        декабрь: (-,2,3,-,-,6,7,-)
    5. Отображение на карте - 4 дня
        декабрь: (-,10,11,-,-,14,15,-)
    6. Оплата - 4 дня
        декабрь: (-,18,19,-,-,22,23,-)
*/

/*ПЛАН-ФАКТ
-------
Октябрь:
23 - Регистрация (фиксы/апгрейды). Допил модульного окна (повесить действия на кнопки ок/отмена)
24 - Автозагрузка данных при сборке приложения и авторизации (допил авторизации, автоматическое создание грузоотправителя)
-
-
27 - Select (транспорт/прицеп) на сотрудниках + обработка отображения инфы в логике селектора и на самих транспортах/прицепах
28 - Заявка, пересборка модели данных, начало работы с автозаполнением select+inn в трёх формах
-
-
31 - Select+Inn (автозаполнение на формах грузополучателя/грузоотправителя)
------
Ноябрь:
1 - Select+Inn добавил автозаполнение на форме авторизации, плюс отработка всех сценариев и отлов багов на этой "фиче"
-
-
4 + Добавил мульти-селект на водительские категории.
  + Оттестил их, подправил отображение сотрудников в настройках.
  + Допил селектора сотрудников и транспорта.
  + Добавил ререндер на списки транспорта и прицепа
5 + Заявка, отображение, селекторы, сохранение
...6 + Валидация номеров транспорта/прицепа и птс
...7 + валидация ВУ сотрудника
8 + дожал маску/валидацию по всем трём пунктам (птс, ву, гн) плюс приделал селектор на случай нестандартных данных (6ч)
9 + оптимизировал код. (1ч)
..10 + оптимизировал валидатор (1ч)
..11 + оптимизировал отрисовку antd-switch
12 + добавил парсер телефона на login и выхватил все баги из него (5ч) (спасибо парсеру и т.п.)
13 + "причесал" парсеры от повторного рендера и затестил их на сотрудники/транспорт +- (2ч)
   + вывел иннВалидатор с подгрузкой в отдельный элемент (1ч)
   + прикрутил его на все три формы (авторизация, грузополучатели/грузоотправители),
     также выяснилось, что у нас проблемы с зацикливанием, разбирался (3ч)
...14 - (0ч)
...15 - (0ч)
16 + ЗАЯВКА: рефакторинг/фикс стартовой логики. (2ч)
   + сохранение данных отправителя/получателя (2.30 ч)
17 - ЗАЯВКА: маршруты и расстояния, отображение и сохранение в бэк (3ч)
   + отображение данных приёма заявки, корректировка и создание логики (отображение на карте) (3ч)
...18 - (0ч)
...19 - (1ч) настройки CSS
20 + подгрузка отдельно каждого +сотрудника/+прицепа/+авто/+грузополуча/+отправителя (45м)
   + вывел (пока единстсвенный) метод автодиспетчера в отдельный редакс (15м)
   + начал осмысление и рефакторинг логики ДОБАВЛЕНИЯ ВОДИТЕЛЯ (форма) (2ч)
21 + рефакторинг селекторов транспорта/прицепа (перенос логики в селекторы) (2ч)
   ДОБАВЛЕНИЕ ВОДИТЕЛЯ:
   + допил калькулятора и всей формы ввода (отказался от селекторов транспорта и прицепа в нём, чтобы не пересогласовывать данные) (2ч)
   + апгейд селектора сотрудников (isDisabled) и стилей самой формы. (2ч)
...22
...23
24 + подогнал поля запроса и загруза заявок под те данные которые передал бэку (1.30ч)
   + оттестил новые запросы от бэка (1ч)
25 + добавил логику оплаты вообще и конкретно на создание заявки
..26
..27 + дописал в бэк запросы на привязку к ответам и на доступ к заявке (1ч)
     + подправил комменты на тип полей заявки (1ч)
28 + корректировка типов данных для разных объектов заявки и т.п. плюс рефакторинг всех зависимостей (2ч)
29 + обсуждение логики с Андреем (Тритон) в основном логика оплаты, микродопилы по оплате (2ч)
   + фильтр прицепа по селектору "тип груза" у транспорта в карточке сотрудника (2ч)
   + фильтр в селекторе добавления водителя (исключение водителей с несоответствующим грузом) (2ч)
..30
ДЕКАБРЬ:
..1
2 + разобрался с селекторами на "добавить водителя" (фильтрация и т.п.) (1ч)
  + допил логики на "добавить водителя" (2ч)
  + добавил фукционал при клике на заблокированный пункт на селекторе (1ч)
3 + работа с бэком (телега) (2ч)
  + допилы селекторов и добавления ответа на заявку
4 + ответ на заявку (множественные допилы) + бэк (3ч)
  + "прилипы" ответа на заявку к самой заявке на акцепте и на самовывозе (1ч)
5 + корректировка данных бэку (1ч)
  + добавление ответа на заявку в самовывозе и в ответе через поиск-таблицу (2ч)
  + "разбирательство" с heroku. итог, надо выкладывать уже на родительский сайт (3ч)
  + тестирование запросов бэка. (снова куча недоработок, эх) (1.30ч)
6 + тестирование запросов бэка с видосами, скринами и методами решения (1ч)
  + работа с таблицей, отображение и данные в ней (2ч)
  + фиксы, апгрейды на карточку водителя (2ч)
  + добавление/изменение статусов водителя (1.45)
7 + тестирование запросов бэка с видосами, скринами и методами решения (1ч) И СНОВА
  + работа с отображениями в таблице (1ч)
  + сброс прицепа при перевыборе транспорта и глюки селектора в карточке водителя (глобальное изменение бага в селекторе) (2ч)
  + запрет на изменение полей в привязанных транспортах/прицепах (1ч)
8 + обработка длины маршрута при создании заявки (отсеивание нереально больших маршрутов) (1ч)
  + таблица, обработка кнопки "открыть" на поиске и другие допилы таблицы (1ч)
  + отработка кейсов с добавлением водителя (занятого и случайной отработки акцептированной заявки) (1ч)
  + рефакторил TS (2ч)
  + отображение водителей в "настройки" (1ч)
9 + модалка с таймером отключения (1ч)
  + рефакторинг и доработка таблицы +открытие заявки по двойному клику на status (1ч)
  + логика удаления водителя с разными статусами (1ч)
  + рефакторинг и дебажинг логики подгрузки фото водителя/транспорта/прицепа (2ч)
  + отображение в селекторе и в списке сотрудников 'на заявке' (30м)
  + добавление запросов на загрузку ответов на заявку с разными параметрами (30м)
  + логика редактирования повторной подачу ответа на заявку того-же водителя (1ч)
  + рефакторинг файловой системы reselect для корректной работы фильтров для селекторов (45м)
  + постановка задачи бэку, написание комментов (15м)
10 + отображение водителя и отображение данных перевозчика (на второе не хватает полей) (2.30ч)
   + добавил поля для отображения на разных пользователей (составил план бэку) (2.30ч)
   + рефакторил код по тайпскрипту и "уживал" новые поля в апишках (2.30ч)
11 ВОСКРЕСЕНЬЕ
    + рефакторил утилиту по тайпскрипту для корректного отображения полей (1ч)
    - начал кодить кнопки на статусе (не закончил) (1ч)
12 + писал Бэку (по работе), Андрею Ген (по срокам), Андрею Тритон (по тому что ещё не выложил на сайт) (1ч)
   + реализовал мягкое удаление (И ВОССТАНОВЛЕНИЕ) сотрудника + микробаги (4ч)
   + пофиксил генерируемый селектор + микродопилы в нём (1ч)
   + адекватное отображение первого окна заявки на статусу (1.30)
   + отображение данных грузополучателя/грузоотправителя из данных самой заявки (в разные дни понемногу) (2ч)
13 + микродопилы по TS на обработку ошибок try/cach (30м)
   + soft-логика кнопок "груз у водителя"/"груз у грузополучателя" (1.30)
   + дофиксил герегируемый селектор на создании заявки (1.30)
   + отображение данных в статусе заявки (работа с корректной подгрузкой данных в бэк и из бэка) (2ч)
   + сборка верной структуры данных и соединение контента для отображения инфы в статусе/истории заявки (1ч)
14 + отображение данных в заявке - контент инфы в реселектор (1ч)
   + добавление водителя на самовывоз - правильная обработка отмены (ч/з модалку) (2ч)
   + стилизация, добавление контента, обработка через модалку, вывод в отдельную компоненту отображения инфы в статусе/истории заявки (3ч)
   + составление задачи бэку на следующие запросы (Базовые) //main.TRITON.data.ts// + заполнил эти строки за 3 дня (1.30)

   +-> прописать логику принятия заявки (в процессе)
   +-> добавить логику оплаты на принятие заявки (частично)
   --> выложить сборку на основной сайт
*/

/* ВОПРОСЫ ПО ТЕМЕ:
    - когда вносится корректный тоннаж груза?
    - какой алгоритм, если ответчик отказался?
    - какой алгоритм, если заказчик отказался после приёма?
*/

/* МИКРОДОПИЛЫ ****************************************************
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
АВТОРИЗАЦИЯ:
- закрывать пароль звёздочками
- зашифровать передачу пароля?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ТРАНСПОРТ/ПРИЦЕП:
+ валидация категорий прав (мультиселектор?) = Ноябрь.4 => ГОТОВО
+ валидация гос. номера транспорта (х123хх123) Маска на госномер? = На работу Ноябрь.5-6 => ГОТОВО
+ валидация гос. номера прицепа (хх1234 123) Маска на госномер? = На работу Ноябрь.5-6 => ГОТОВО
+ В законодательстве правки новые вступили летом. Надо изменить варианты выбора данных в нижнем окне: = На работу Ноябрь.6 => ГОТОВО
    1 – собственность; 2 – совместная собственность супругов; 3 – аренда; 4 – лизинг; 5 – безвозмездное пользование.

суперпох
- сделать кнопку/ссылку на "прикреплён к" с переходом к сотруднику для редактирования
- определять первый (не цифровой) населённый пункт из фэйкового маршрута
- правильная валидация даты через ReactFinalForm
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
СОТРУДНИК:
+ форму/маску на права (12 xx №123456) = На работу Ноябрь.5-6 = ГОТОВО
+- МЯГКОЕ УДАЛЕНИЕ СОТРУДНИКА зачисткой idUser = В ПРОЦЕССЕ (9декабря) передал на запрос бэку
    также задать бэку задание на проверку при создании, существует или нет, если
    существует без idUser, предлагать перекинуть данные водителя на текущую организацию
    (чтобы сохранить привязку к рейтингу и т.п.)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
НАСТРОЙКИ:
- сделать принудительную обнову на списки (кнопку)?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ЗАЯВКА:
+ заблокировать вкладку Документы при создании заявки (Ноябрь.5.ночь)
+ заявка сабмитится 2 раза (ноябрь.17)
- добавить массив акцептированных к заявке пользователей (дать задание бэку)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
СЕЛЕКТОР:
- затайпскриптить селектор (custom-select)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ГЛОБАЛЬНЫЕ:

// ФОРМЫ //
+ можно использовать и латинские и русские специальные буквы при вводе, но сохранять в латинице = Ноябрь.5-6 => ГОТОВО
+ добавить обработку цифры 7и8 на все парсеры телефонов = Ноябрь.12 => ГОТОВО
+!- исключить двойные срабатывания парсеров на масках = Ноябрь.13 => ГОТОВО

// рефакторинг //
-+- транспорт/прицеп, грузоотправители/грузополучатели - общие методы в отдельный файл
    + innValidate (вывел в общий объект) =  Ноябрь.13 => ГОТОВО
!- отключить и проверить работу приложения (без React.StrictMode)
- использовать React.memo на тех объектах, где это необходимо
- использовать useMemo/useCallback на всех компонентах
- использовать Reac.lazy на всех вкладках/объектах
*/

/* ЗАДАЧИ БЭКУ:
планируемые:
- проверить, совпадает ли серия-номер паспорта любого другого сотрудника
переданные:
+ (4.ноября) Алексей. Логирование на создание/изменение сотрудника не работает. Исправь пожалуйста
+ (4.ноября) ещё просьба, добавь в логи поля (mode: string и viewed: boolean)
- (5.ноября.ночь) onerequesttype PUT измени валидацию поля cargoComposition до 100 символов (выдаёт ошибку при сохранении)
- (13ноября) сообщение об отказе отправлять код на несуществующий номер, подправить отображение логгирования на изменение пользователя
+ (17ноября) увеличить количество символов в route до 70.000
+ (17ноября) возвращать список заявок с фильтрацией от даты по shipmentDate
+ Сделал запрос. PATCH onerequesttypedate/ shipmentDate: string
+ (17ноября) отключить подгрузку route в списках, оставить только в запросе по ID заявки
- (17ноября) подумать, что делать со временем (разные часовые пояса и т.п.)
- (23ноября) первое: отдельный запрос допустим "/onerequesttypeacceptuser", я отправляю put c полями "idUser" и "requestNumber" (оба поля обязательные), а ты на бэке добавляешь к конкретной заявке этот idUser в массив поля acceptedUsers <— это будет новое поле в модели заявки OneRequestType. В ответе пишешь в "message": 1."Добавить не удалось,  Заявка № XX не существует"  2."Пользователю ХХХ предоставлен доступ к просмотру заявки YYY"  Другие ошибки на твоё усмотрение || если пользователь уже добавлен на данную заявку (потому как могут случиться задвоенные запросы), просто возвращай сообщение №2, и массив получается не меняй массив.
- (23ноября) второе: отдельный запрос "/onerequesttyperesponses", также отправляю PUT с полями "responseId" и "requestNumber" (оба поля обязательные), а ты на бэке добавляешь к конкретной заявке данные "responseId" к уже существующему в нашей модели полю "answers", по такому же принципу, что и в запросе выше.
- (23ноября) третье: так как заявка будет всё-таки самостоятельный объект, вне зависимости от разных обстоятельств, то в него надо добавить ещё тучку полей
- (28ноября) открыть все данные при административном просмотре сервера
- (3декабря) DELETE /api/responsetorequestcardtype/ = удаление ответов на запросы через запятую. если один Id, то один. если много, то все по списку, если в списке есть id, который уже удалён или не существует, - игнор
- (3декабря) также (внутренняя логика бэка), при удалении конкретного запроса, необходимо также удалить его id из списка ответов на запросы в поле "answers" самой заявки (onerequesttype), к которой он был привязан (это просто отследить в ответе на заявку (responsetorequestcardtype) по полю requestNumber)
- (3декабря) также (при создании), добавить его id в поле answers в заявке
- (3декабря) Желательно написать на русском:  "Ответ на заявку №36 успешно создан. ID: такое-то"
    во первых мне это нужно для привязки пользователя к данному ответу на заявку....... погодь....
- (3декабря) ты же у себя на бэке можешь привязать сразу к этому полю? по тому же принципу что с answers...
    это нужно чтобы не "шить" запросами туда-сюда ещё и с опасностью их потерять или продублировать...
    При создании ответа на заявку общая логика такая (на бэке):
    1. Создаёшь со всеми полями. это просто и уже реализовано...
    2. по искомой заявке добавляешь в поле answers id ответа на заявку (функции добавления у тебя уже есть, просто продублируй их на внутреннюю логику)
    3. по полю idEmployee добавляешь в поле пользователя addedToResponse этот id
    4. отобразить создание/удаление ответа на заявку в логгировании
    5. При удалении конкретного ответа на заявку (а также и при удалении по списку) удалить их Id-шки в поле answers в Заявке и в поле addedToResponse пользователя
    всё это я говорю про запрос /responsetorequestcardtype/
- (4декабря) речь идёт об удалении самих ответов на заявку (DELETE /api/responsetorequestcardtype/).
    Вот в нём, ДОПОЛНИТЕЛЬНО кроме удаления самих ответов на заявки, необходимо, чтобы сразу же (во внутренней логике бэка)
    удалялись эти id этих ответов из (requestNumber) заявки (из поля answers) и из (idEmployee) пользователя (из поля addedToResponse)
- (5-6декабря) улучшали запросы на создание и удаление ответов на заявку.
- (7декабря) в общем, два глобальных вопроса и оба на создании ответа на заявку
    1. Создание на несуществующую заявку. Должно быть ТОЛЬКО на существующие.
     и только на заявки, у которых status: "новая заявка". Если другой статус ,
      то пришли ответ "Заявка №XX уже принята в работу"
    2. Один водитель на одну заявку. Сейчас, если водитель добавлен хоть где-нибудь,
    то не даёт добавить его вообще никуда больше. также периодически "вылазиет" IndexError.
    - Потом вопросы на удалении ответов на запросы.
    Во всех трёх случаях пишет message: "error". Я написал выше примеры адекватного ответа
-(8декабря) ещё одна просьба будет по ответам по заявкам, думаю это несложно совсем, учитывая что данный функционал
    частично используется у тебя при удалении по сотрудникам и по номеру заявки
    - мне нужно вернуть список ответов на заявки по idEmployee и отдельно по requestNumber,
    - желательно это сделать как DELETE по доп. полям в PATCH /api/responsetorequestcardtype/, или, если тебе удобно,
     то отдельными запросами.
-(9декабря) При создании водителя, проверять есть ли сотрудник с таким-же номером паспорта.
    Если есть, то возвращаешь"message: "Сотрудник с данным номером паспорта уже существует", idEmployee: "id сотрудника сюда".
    я планирую использовать "мягкое" удаление, с зачисткой поля idUser (но это я сам через пост сделаю), чтобы сохранять
     данные рейтинга водителя, если он перейдёт в другую организацию...
-(15декабря) вот те данные, которы мне нужны при загрузке программы ДО авторизации
    =main.TRITON.data.ts=
    из важного. значения этих ключей будут определять значения аналогичных ключей новых создаваемых пользователей
    то есть, если я посылаю запрос на создание пользователя, то эти ключи автоматически заполняются У ТЕБЯ из данного контекста
    ещё. раз это данные ДО авторизации, то предлагаю, чтобы это был патч-запрос с каким-нибудь паролем, например: 7Zia8qXnIZ3d
**/

30ноября = Андрей Тритон =
Получается списание оплаты у пользователей будет в 2 случаях:
-Когда заявка получает номер после заполнения всех данных и попадает в вкладку Заявки. Оплата удерживается со счета Создателя.
-Когда Перевозчик принял ответ на отклик Заказчика, заявка также попадает в вкладку Заявки к Перевозчику и удерживается оплата.
(Не верно по дате списания денег.
Они списываются только после принятия его ответа Заказчиком и после того как он
!!!согласится!!! на этот ответ, в этот момент и будет списание)